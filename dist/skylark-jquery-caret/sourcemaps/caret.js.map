{"version":3,"sources":["caret.js"],"names":["define","$","_input","document","createElement","_support","_rNewlineIE","_rCarriageReturn","_getValue","input","value","text","_getIndex","pos","len","replace","length","Math","floor","Range","start","end","this","prototype","toString","JSON","stringify","_getCaret","selectionStart","_getCaretW3","range","textInputRange","rawValue","endRange","focus","selection","createRange","parentElement","createTextRange","moveToBookmark","getBookmark","collapse","compareEndPoints","moveStart","_getCaretIE","_setCaret","setSelectionRange","_setCaretW3","move","select","_setCaretIE","_insertAtCaret","curPos","oldValueNorm","newLength","maxLength","getAttribute","attrName","hasAttribute","_hasAttr","delta","substr","_setValue","_getInputRange","selectionEnd","min","max","substring","_getInputRangeW3","normalizedValue","slice","split","moveEnd","_getInputRangeIE","_setInputRange","startPos","endPos","_setInputRangeW3","tr","_setInputRangeIE","_selectAll","elem","$elem","is","window","getSelection","selectNodeContents","removeAllRanges","addRange","_selectAllW3","body","moveToElementText","_selectAllIE","extend","fn","caret","$inputs","filter","arguments","get","each","_i","$input","oldValue","val","attr","startText","endText","_replaceInputRange","selectAll","deselectAll","empty"],"mappings":"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","file":"../caret.js","sourcesContent":["define([\"skylark-jquery\"],function($){\n\n    var _input = document.createElement('input');\n\n    var _support = {\n        setSelectionRange: ('setSelectionRange' in _input) || ('selectionStart' in _input),\n        createTextRange: ('createTextRange' in _input) || ('selection' in document)\n    };\n\n    var _rNewlineIE = /\\r\\n/g,\n        _rCarriageReturn = /\\r/g;\n\n    var _getValue = function(input) {\n        if (typeof(input.value) !== 'undefined') {\n            return input.value;\n        }\n        return $(input).text();\n    };\n\n    var _setValue = function(input, value) {\n        if (typeof(input.value) !== 'undefined') {\n            input.value = value;\n        } else {\n            $(input).text(value);\n        }\n    };\n\n    var _getIndex = function(input, pos) {\n        var norm = _getValue(input).replace(_rCarriageReturn, '');\n        var len = norm.length;\n\n        if (typeof(pos) === 'undefined') {\n            pos = len;\n        }\n\n        pos = Math.floor(pos);\n\n        // Negative index counts backward from the end of the input/textarea's value\n        if (pos < 0) {\n            pos = len + pos;\n        }\n\n        // Enforce boundaries\n        if (pos < 0) { pos = 0; }\n        if (pos > len) { pos = len; }\n\n        return pos;\n    };\n\n    var _hasAttr = function(input, attrName) {\n        return input.hasAttribute ? input.hasAttribute(attrName) : (typeof(input[attrName]) !== 'undefined');\n    };\n\n    /**\n     * @class\n     * @constructor\n     */\n    var Range = function(start, end, length, text) {\n        this.start = start || 0;\n        this.end = end || 0;\n        this.length = length || 0;\n        this.text = text || '';\n    };\n\n    Range.prototype.toString = function() {\n        return JSON.stringify(this, null, '    ');\n    };\n\n    var _getCaretW3 = function(input) {\n        return input.selectionStart;\n    };\n\n    /**\n     * @see http://stackoverflow.com/q/6943000/467582\n     */\n    var _getCaretIE = function(input) {\n        var caret, range, textInputRange, rawValue, len, endRange;\n\n        // Yeah, you have to focus twice for IE 7 and 8.  *cries*\n        input.focus();\n        input.focus();\n\n        range = document.selection.createRange();\n\n        if (range && range.parentElement() === input) {\n            rawValue = _getValue(input);\n\n            len = rawValue.length;\n\n            // Create a working TextRange that lives only in the input\n            textInputRange = input.createTextRange();\n            textInputRange.moveToBookmark(range.getBookmark());\n\n            // Check if the start and end of the selection are at the very end\n            // of the input, since moveStart/moveEnd doesn't return what we want\n            // in those cases\n            endRange = input.createTextRange();\n            endRange.collapse(false);\n\n            if (textInputRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\n                caret = rawValue.replace(_rNewlineIE, '\\n').length;\n            } else {\n                caret = -textInputRange.moveStart(\"character\", -len);\n            }\n\n            return caret;\n        }\n\n        // NOTE: This occurs when you highlight part of a textarea and then click in the middle of the highlighted portion in IE 6-10.\n        //       There doesn't appear to be anything we can do about it.\n//        alert(\"Your browser is incredibly stupid.  I don't know what else to say.\");\n//        alert(range + '\\n\\n' + range.parentElement().tagName + '#' + range.parentElement().id);\n\n        return 0;\n    };\n\n    /**\n     * Gets the position of the caret in the given input.\n     * @param {HTMLInputElement|HTMLTextAreaElement} input input or textarea element\n     * @returns {Number}\n     * @see http://stackoverflow.com/questions/263743/how-to-get-cursor-position-in-textarea/263796#263796\n     */\n    var _getCaret = function(input) {\n        if (!input) {\n            return undefined;\n        }\n\n        // Mozilla, et al.\n        if (_support.setSelectionRange) {\n            return _getCaretW3(input);\n        }\n        // IE\n        else if (_support.createTextRange) {\n            return _getCaretIE(input);\n        }\n\n        return undefined;\n    };\n\n    var _setCaretW3 = function(input, pos) {\n        input.setSelectionRange(pos, pos);\n    };\n\n    var _setCaretIE = function(input, pos) {\n        var range = input.createTextRange();\n        range.move('character', pos);\n        range.select();\n    };\n\n    /**\n     * Sets the position of the caret in the given input.\n     * @param {HTMLInputElement|HTMLTextAreaElement} input input or textarea element\n     * @param {Number} pos\n     * @see http://parentnode.org/javascript/working-with-the-cursor-position/\n     */\n    var _setCaret = function(input, pos) {\n        input.focus();\n\n        pos = _getIndex(input, pos);\n\n        // Mozilla, et al.\n        if (_support.setSelectionRange) {\n            _setCaretW3(input, pos);\n        }\n        // IE\n        else if (_support.createTextRange) {\n            _setCaretIE(input, pos);\n        }\n    };\n\n    /**\n     * Inserts the specified text at the current caret position in the given input.\n     * @param {HTMLInputElement|HTMLTextAreaElement} input input or textarea element\n     * @param {String} text\n     * @see http://parentnode.org/javascript/working-with-the-cursor-position/\n     */\n    var _insertAtCaret = function(input, text) {\n        var curPos = _getCaret(input);\n\n        var oldValueNorm = _getValue(input).replace(_rCarriageReturn, '');\n\n        var newLength = +(curPos + text.length + (oldValueNorm.length - curPos));\n        var maxLength = +input.getAttribute('maxlength');\n\n        if(_hasAttr(input, 'maxlength') && newLength > maxLength) {\n            var delta = text.length - (newLength - maxLength);\n            text = text.substr(0, delta);\n        }\n\n        _setValue(input, oldValueNorm.substr(0, curPos) + text + oldValueNorm.substr(curPos));\n\n        _setCaret(input, curPos + text.length);\n    };\n\n    var _getInputRangeW3 = function(input) {\n        var range = new Range();\n\n        range.start = input.selectionStart;\n        range.end = input.selectionEnd;\n\n        var min = Math.min(range.start, range.end);\n        var max = Math.max(range.start, range.end);\n\n        range.length = max - min;\n        range.text = _getValue(input).substring(min, max);\n\n        return range;\n    };\n\n    /** @see http://stackoverflow.com/a/3648244/467582 */\n    var _getInputRangeIE = function(input) {\n        var range = new Range();\n\n        input.focus();\n\n        var selection = document.selection.createRange();\n\n        if (selection && selection.parentElement() === input) {\n            var len, normalizedValue, textInputRange, endRange, start = 0, end = 0;\n            var rawValue = _getValue(input);\n\n            len = rawValue.length;\n            normalizedValue = rawValue.replace(/\\r\\n/g, \"\\n\");\n\n            // Create a working TextRange that lives only in the input\n            textInputRange = input.createTextRange();\n            textInputRange.moveToBookmark(selection.getBookmark());\n\n            // Check if the start and end of the selection are at the very end\n            // of the input, since moveStart/moveEnd doesn't return what we want\n            // in those cases\n            endRange = input.createTextRange();\n            endRange.collapse(false);\n\n            if (textInputRange.compareEndPoints(\"StartToEnd\", endRange) > -1) {\n                start = end = len;\n            } else {\n                start = -textInputRange.moveStart(\"character\", -len);\n                start += normalizedValue.slice(0, start).split(\"\\n\").length - 1;\n\n                if (textInputRange.compareEndPoints(\"EndToEnd\", endRange) > -1) {\n                    end = len;\n                } else {\n                    end = -textInputRange.moveEnd(\"character\", -len);\n                    end += normalizedValue.slice(0, end).split(\"\\n\").length - 1;\n                }\n            }\n\n            /// normalize newlines\n            start -= (rawValue.substring(0, start).split('\\r\\n').length - 1);\n            end -= (rawValue.substring(0, end).split('\\r\\n').length - 1);\n            /// normalize newlines\n\n            range.start = start;\n            range.end = end;\n            range.length = range.end - range.start;\n            range.text = normalizedValue.substr(range.start, range.length);\n        }\n\n        return range;\n    };\n\n    /**\n     * Gets the selected text range of the given input.\n     * @param {HTMLInputElement|HTMLTextAreaElement} input input or textarea element\n     * @returns {Range}\n     * @see http://stackoverflow.com/a/263796/467582\n     * @see http://stackoverflow.com/a/2966703/467582\n     */\n    var _getInputRange = function(input) {\n        if (!input) {\n            return undefined;\n        }\n\n        // Mozilla, et al.\n        if (_support.setSelectionRange) {\n            return _getInputRangeW3(input);\n        }\n        // IE\n        else if (_support.createTextRange) {\n            return _getInputRangeIE(input);\n        }\n\n        return undefined;\n    };\n\n    var _setInputRangeW3 = function(input, startPos, endPos) {\n        input.setSelectionRange(startPos, endPos);\n    };\n\n    var _setInputRangeIE = function(input, startPos, endPos) {\n        var tr = input.createTextRange();\n        tr.moveEnd('textedit', -1);\n        tr.moveStart('character', startPos);\n        tr.moveEnd('character', endPos - startPos);\n        tr.select();\n    };\n\n    /**\n     * Sets the selected text range of (i.e., highlights text in) the given input.\n     * @param {HTMLInputElement|HTMLTextAreaElement} input input or textarea element\n     * @param {Number} startPos Zero-based index\n     * @param {Number} endPos Zero-based index\n     * @see http://parentnode.org/javascript/working-with-the-cursor-position/\n     * @see http://stackoverflow.com/a/2966703/467582\n     */\n    var _setInputRange = function(input, startPos, endPos) {\n        startPos = _getIndex(input, startPos);\n        endPos = _getIndex(input, endPos);\n\n        // Mozilla, et al.\n        if (_support.setSelectionRange) {\n            _setInputRangeW3(input, startPos, endPos);\n        }\n        // IE\n        else if (_support.createTextRange) {\n            _setInputRangeIE(input, startPos, endPos);\n        }\n    };\n\n    /**\n     * Replaces the currently selected text with the given string.\n     * @param {HTMLInputElement|HTMLTextAreaElement} input input or textarea element\n     * @param {String} text New text that will replace the currently selected text.\n     * @see http://parentnode.org/javascript/working-with-the-cursor-position/\n     */\n    var _replaceInputRange = function(input, text) {\n        var $input = $(input);\n\n        var oldValue = $input.val();\n        var selection = _getInputRange(input);\n\n        var newLength = +(selection.start + text.length + (oldValue.length - selection.end));\n        var maxLength = +$input.attr('maxlength');\n\n        if($input.is('[maxlength]') && newLength > maxLength) {\n            var delta = text.length - (newLength - maxLength);\n            text = text.substr(0, delta);\n        }\n\n        // Now that we know what the user selected, we can replace it\n        var startText = oldValue.substr(0, selection.start);\n        var endText = oldValue.substr(selection.end);\n\n        $input.val(startText + text + endText);\n\n        // Reset the selection\n        var startPos = selection.start;\n        var endPos = startPos + text.length;\n\n        _setInputRange(input, selection.length ? startPos : endPos, endPos);\n    };\n\n    var _selectAllW3 = function(elem) {\n        var selection = window.getSelection();\n        var range = document.createRange();\n        range.selectNodeContents(elem);\n        selection.removeAllRanges();\n        selection.addRange(range);\n    };\n\n    var _selectAllIE = function(elem) {\n        var range = document.body.createTextRange();\n        range.moveToElementText(elem);\n        range.select();\n    };\n\n    /**\n     * Select all text in the given element.\n     * @param {HTMLElement} elem Any block or inline element other than a form element.\n     */\n    var _selectAll = function(elem) {\n        var $elem = $(elem);\n        if ($elem.is('input, textarea') || elem.select) {\n            $elem.select();\n            return;\n        }\n\n        // Mozilla, et al.\n        if (_support.setSelectionRange) {\n            _selectAllW3(elem);\n        }\n        // IE\n        else if (_support.createTextRange) {\n            _selectAllIE(elem);\n        }\n    };\n\n    var _deselectAll = function() {\n        if (document.selection) {\n            document.selection.empty();\n        }\n        else if (window.getSelection) {\n            window.getSelection().removeAllRanges();\n        }\n    };\n\n    $.extend($.fn, {\n\n        /**\n         * Gets or sets the position of the caret or inserts text at the current caret position in an input or textarea element.\n         * @returns {Number|jQuery} The current caret position if invoked as a getter (with no arguments)\n         * or this jQuery object if invoked as a setter or inserter.\n         * @see http://web.archive.org/web/20080704185920/http://parentnode.org/javascript/working-with-the-cursor-position/\n         * @since 1.0.0\n         * @example\n         * <pre>\n         *    // Get position\n         *    var pos = $('input:first').caret();\n         * </pre>\n         * @example\n         * <pre>\n         *    // Set position\n         *    $('input:first').caret(15);\n         *    $('input:first').caret(-3);\n         * </pre>\n         * @example\n         * <pre>\n         *    // Insert text at current position\n         *    $('input:first').caret('Some text');\n         * </pre>\n         */\n        caret: function() {\n            var $inputs = this.filter('input, textarea');\n\n            // getCaret()\n            if (arguments.length === 0) {\n                var input = $inputs.get(0);\n                return _getCaret(input);\n            }\n            // setCaret(position)\n            else if (typeof arguments[0] === 'number') {\n                var pos = arguments[0];\n                $inputs.each(function(_i, input) {\n                    _setCaret(input, pos);\n                });\n            }\n            // insertAtCaret(text)\n            else {\n                var text = arguments[0];\n                $inputs.each(function(_i, input) {\n                    _insertAtCaret(input, text);\n                });\n            }\n\n            return this;\n        },\n\n        /**\n         * Gets or sets the selection range or replaces the currently selected text in an input or textarea element.\n         * @returns {Range|jQuery} The current selection range if invoked as a getter (with no arguments)\n         * or this jQuery object if invoked as a setter or replacer.\n         * @see http://stackoverflow.com/a/2966703/467582\n         * @since 1.0.0\n         * @example\n         * <pre>\n         *    // Get selection range\n         *    var range = $('input:first').range();\n         * </pre>\n         * @example\n         * <pre>\n         *    // Set selection range\n         *    $('input:first').range(15);\n         *    $('input:first').range(15, 20);\n         *    $('input:first').range(-3);\n         *    $('input:first').range(-8, -3);\n         * </pre>\n         * @example\n         * <pre>\n         *    // Replace the currently selected text\n         *    $('input:first').range('Replacement text');\n         * </pre>\n         */\n        range: function() {\n            var $inputs = this.filter('input, textarea');\n\n            // getRange() = { start: pos, end: pos }\n            if (arguments.length === 0) {\n                var input = $inputs.get(0);\n                return _getInputRange(input);\n            }\n            // setRange(startPos, endPos)\n            else if (typeof arguments[0] === 'number') {\n                var startPos = arguments[0];\n                var endPos = arguments[1];\n                $inputs.each(function(_i, input) {\n                    _setInputRange(input, startPos, endPos);\n                });\n            }\n            // replaceRange(text)\n            else {\n                var text = arguments[0];\n                $inputs.each(function(_i, input) {\n                    _replaceInputRange(input, text);\n                });\n            }\n\n            return this;\n        },\n\n        /**\n         * Selects all text in each element of this jQuery object.\n         * @returns {jQuery} This jQuery object\n         * @see http://stackoverflow.com/a/11128179/467582\n         * @since 1.5.0\n         * @example\n         * <pre>\n         *     // Select the contents of span elements when clicked\n         *     $('span').on('click', function() { $(this).highlight(); });\n         * </pre>\n         */\n        selectAll: function() {\n            return this.each(function(_i, elem) {\n                _selectAll(elem);\n            });\n        }\n\n    });\n\n    $.extend($, {\n        /**\n         * Deselects all text on the page.\n         * @returns {jQuery} The jQuery function\n         * @since 1.5.0\n         * @example\n         * <pre>\n         *     // Select some text\n         *     $('span').selectAll();\n         *\n         *     // Deselect the text\n         *     $.deselectAll();\n         * </pre>\n         */\n        deselectAll: function() {\n            _deselectAll();\n            return this;\n        }\n    });\n\n    return $;\n});"]}